import numpy as np
import pandas as pd


def lidar_xyz(r, ele, azi):
    """
    Convert spherical to Cartesian coordinates
    """
    R = r
    A = np.pi / 2 - np.radians(azi)
    E = np.radians(ele)

    X = R * np.cos(E) * np.cos(A)
    Y = R * np.cos(E) * np.sin(A)
    Z = R * np.sin(E)

    return X, Y, Z


def defineLocalBins(df, config):
    """
    Helper function for making tidy bins based on ranges and bin sizes
    """

    def bins(coord, delta):
        return np.arange(
            np.floor(coord.min()) - delta / 2,
            np.ceil(coord.max()) + delta,
            delta,
        )

    if "dx" in config.keys():
        df["xbins"] = pd.cut(df.x, bins(df.x, config["dx"]))
    if "dy" in config.keys():
        df["ybins"] = pd.cut(df.y, bins(df.y, config["dy"]))
    if "dz" in config.keys():
        df["zbins"] = pd.cut(df.z, bins(df.z, config["dz"]))
    if "dtime" in config.keys():
        df["timebins"] = pd.cut(df.deltaTime, bins(df.deltaTime, config["dtime"]))

    return df


def mid(x):
    """
    Mid point in vector
    """
    return (x[:-1] + x[1:]) / 2


def gaussian(x, sigma):
    """
    Gaussian function
    """
    return np.exp(-(x**2) / (2 * sigma**2))
